name: ci

on:
  push:
    branches: main
  workflow_dispatch:

env:
  GH_REPO: ${{ github.repository }}
  MICROPYTHON_REPO: https://github.com/micropython/micropython.git
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/micropython-builder

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - mpy-port: unix
            mpy-board: standard
            image-target: unix
            image-name: unix
          - mpy-port: rp2
            image-target: rp2
            image-name: rp2

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      -
        name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      -
        name: Get latest micropython version
        id: get-latest-mpy
        run: |
          ./scripts/latest_repo_tag.py -r ${{ env.MICROPYTHON_REPO }} > latest_tag.txt
          echo "MICROPYTHON_VERSION=$(cat latest_tag.txt)" >> $GITHUB_ENV
          echo "MICROPYTHON_VERSION=$(cat latest_tag.txt)" >> $GITHUB_OUTPUT


      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.get-latest-mpy.outputs.MICROPYTHON_VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.get-latest-mpy.outputs.MICROPYTHON_VERSION }}
            type=sha
          flavor: |
            latest=true
            suffix=-${{ matrix.image-name }},onlatest=true
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index


      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          build-args: |
            MPY_PORT=${{ matrix.mpy-port }}
            MICROPYTHON_VERSION=${{ steps.get-latest-mpy.outputs.MICROPYTHON_VERSION }}
            MICROPYTHON_REPO=${{ env.MICROPYTHON_REPO }}
          context: .
          file: Dockerfile
          target: ${{ matrix.image-target }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_REPO }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKERHUB_REPO }}:buildcache,mode=max
