name: ci

on:
  push:
    branches: main

env:
  GH_REPO: ${{ github.repository }}
  MICROPYTHON_REPO: https://github.com/micropython/micropython.git
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/micropython-builder

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - mpy-port: rp2
            mpy-board: RPI_PICO
            image-name: rp2_rpi_pico
          - mpy-port: rp2
            mpy-board: RPI_PICO_W
            image-name: rp2_rpi_pico_w
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      -
        name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      -
        name: Get latest micropython version
        id: get-latest-mpy
        run: |
          ./scripts/latest_repo_tag.py -r ${{ env.MICROPYTHON_REPO }} > latest_tag.txt
          echo "MICROPYTHON_VERSION=$(cat latest_tag.txt)" >> $GITHUB_ENV
          echo "MICROPYTHON_VERSION=$(cat latest_tag.txt)" >> $GITHUB_OUTPUT

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        id: build-test
        with:
          load: true
          build-args: |
            MPY_PORT=${{ matrix.mpy-port }}
            MPY_BOARD=${{ matrix.mpy-board }}
            MICROPYTHON_VERSION=${{ steps.get-latest-mpy.outputs.MICROPYTHON_VERSION }}
            MICROPYTHON_REPO=${{ env.MICROPYTHON_REPO }}
          target: rp2
          tags: ${{ env.DOCKERHUB_REPO }}:test-${{ matrix.image-name }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_REPO }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKERHUB_REPO }}:buildcache,mode=max

      -
        name: Build firmware
        run: |
          mkdir -p $BUILD_DIR
          ./scripts/build_firmware.py --image $IMAGE_NAME $BUILD_DIR
        env:
          BUILD_DIR: build/${{ matrix.mpy-port }}_${{ matrix.mpy-board }}
          IMAGE_NAME: ${{ steps.build-test.outputs.imageid }}

      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          build-args: |
            MPY_PORT=${{ matrix.mpy-port }}
            MPY_BOARD=${{ matrix.mpy-board }}
            MICROPYTHON_VERSION=${{ steps.get-latest-mpy.outputs.MICROPYTHON_VERSION }}
            MICROPYTHON_REPO=${{ env.MICROPYTHON_REPO }}
          target: rp2
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKERHUB_REPO }}:latest-${{ matrix.image-name }}
            ${{ env.DOCKERHUB_REPO }}:${{ steps.get-latest-mpy.outputs.MICROPYTHON_VERSION }}-${{ matrix.image-name }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_REPO }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKERHUB_REPO }}:buildcache,mode=max
